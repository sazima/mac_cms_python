<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.video.tanmu.dao.VideoDao">
    <resultMap id="BaseResultMap" type="com.video.tanmu.model.VideoModel">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type_id1" jdbcType="INTEGER" property="typeId1"/>
        <result column="type_id2" jdbcType="INTEGER" property="typeId2"/>
        <result column="update_time" jdbcType="INTEGER" property="updateTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="av" jdbcType="VARCHAR" property="av"/>
    </resultMap>
    <sql id="Base_Column_List">
        `id`, type_id1, type_id2, `name`, picture, content, av, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM video
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.video.tanmu.model.VideoModel"
            useGeneratedKeys="true">
        INSERT INTO video (type_id1, type_id2, `name`,
                           picture, content, av, update_time)
        VALUES (#{typeId1,jdbcType=INTEGER}, #{typeId2,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
                #{picture,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{av,jdbcType=VARCHAR}, #{updateTime})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.video.tanmu.model.VideoModel"
            useGeneratedKeys="true">
        insert into video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeId1 != null">
                type_id1,
            </if>
            <if test="typeId2 != null">
                type_id2,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="av != null">
                av,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeId1 != null">
                #{typeId1,jdbcType=INTEGER},
            </if>
            <if test="typeId2 != null">
                #{typeId2,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="av != null">
                #{av,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime}
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.video.tanmu.model.VideoModel">
        update video
        <set>
            <if test="typeId1 != null">
                type_id1 = #{typeId1,jdbcType=INTEGER},
            </if>
            <if test="typeId2 != null">
                type_id2 = #{typeId2,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="av != null">
                av = #{av,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.video.tanmu.model.VideoModel">
        UPDATE video
        SET type_id1 = #{typeId1,jdbcType=INTEGER},
            type_id2 = #{typeId2,jdbcType=INTEGER},
            `name`   = #{name,jdbcType=VARCHAR},
            picture  = #{picture,jdbcType=VARCHAR},
            content  = #{content,jdbcType=VARCHAR},
            av       = #{av,jdbcType=VARCHAR},
            update_time       = #{update_time}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByTypeId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from video WHERE type_id2 = #{typeId} or type_id1 = #{typeId} order by id desc limit #{limit}
    </select>

    <select id="selectByQuery"  resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from video
        <where>
            <if test="videoQueryParam.kw != null">
                and name like concat('%', #{videoQueryParam.kw}, '%')
            </if>
            <if test="videoQueryParam.typeId != null">
                and (type_id1 = #{videoQueryParam.typeId} or type_id2 = #{videoQueryParam.typeId})
            </if>
            <if test="exceptTypeList != null">
               and type_id2 not in
                <foreach item="item" index="index" collection="exceptTypeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and type_id1 not in
                <foreach item="item" index="index" collection="exceptTypeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by id desc limit #{offset}, #{limit}
    </select>
    <select id="selectTotalByQuery" parameterType="com.video.tanmu.param.VideoQueryParam" resultType="int">
        SELECT
        count(0)
        from video
        <where>
            <if test="kw != null">
                and name like concat('%', #{kw}, '%')
            </if>
            <if test="typeId != null">
                and type_id1 = #{typeId} or type_id2 = #{typeId}
            </if>
        </where>
    </select>
    <select id="selectByAv" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from video WHERE av = #{av}
    </select>
    <select id="selectByAvList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from video WHERE av in
        <foreach item="item" index="index" collection="avList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectByTypeIdAndSortByTanmuCount" resultMap="BaseResultMap">
        SELECT
        a.`id`, a.type_id1, a.type_id2, a.`name`, a.picture, a.content, a.av, a.update_time
        from video a left join (
            select video_id, count(0) as tanmu_count from video_tanmu where  video_id in (select id from video where  type_id2 = #{typeId} or type_id1 = #{typeId})  group by video_id order by `tanmu_count` desc limit 3
        ) b
            on a.id = b.video_id where  a.type_id2 = #{typeId} or a.type_id1 = #{typeId} order by b.tanmu_count desc, a.id desc limit #{limit}
    </select>



</mapper>